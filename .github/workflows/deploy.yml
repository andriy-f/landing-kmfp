# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Deploy

on:
  release:
    types: [published]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deployment:
    name: Push static build to hosting server
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: npm ci

      - name: Run unit tests
        run: npm test

      - name: Create static build
        run: npm run build

      - name: install ncftp
        run: sudo apt-get update && sudo apt-get install ncftp

      - name: Deploy static build via FTP
        env:
          HOSTING_ADDRESS: ${{ secrets.HOSTING_ADDRESS }}
          FTP_USER: ${{secrets.FTP_USER}}
          FTP_PASSWORD: ${{secrets.FTP_PASSWORD}}
        run: |
          echo "host $HOSTING_ADDRESS" > auth.cfg
          echo "user FTP_USER" >> auth.cfg
          echo "pass FTP_PASSWORD" >> auth.cfg
          ncftpput -f auth.cfg -R ~ ./public
          rm auth.cfg

      # - name: Upload static build via FTP
      #   uses: SamKirkland/FTP-Deploy-Action@8a24039354ee91000cb948cb4a1dbdf1a1b94a3c
      #   with:
      #     server: ${{ secrets.HOSTING_ADDRESS }}
      #     username: ${{secrets.FTP_USER}}
      #     password: ${{secrets.FTP_PASSWORD}}
      #     local-dir: public/
